# Generated by Django 4.0.1 on 2022-01-26 10:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя продукт-менеджера')),
                ('worktime_from', models.TimeField(verbose_name='Рабочее время, с')),
                ('worktime_to', models.TimeField(verbose_name='Рабочее время, до')),
                ('telegram_username', models.CharField(max_length=200, verbose_name='Юзернейм в телеграме')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя ученика')),
                ('level', models.CharField(choices=[('novice', 'Новичок'), ('novice+', 'Новичок+'), ('junior', 'Джуниор')], max_length=200, verbose_name='Уровень')),
                ('worktime_from', models.TimeField(verbose_name='Рабочее время, с')),
                ('worktime_to', models.TimeField(verbose_name='Рабочее время, до')),
                ('telegram_username', models.CharField(max_length=200, verbose_name='Юзернейм в телеграме')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(verbose_name='Время')),
                ('product_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='meeting_organizer.productmanager', verbose_name='Продукт-менеджер')),
                ('team_members', models.ManyToManyField(related_name='meetings', to='meeting_organizer.Student', verbose_name='Члены команды')),
            ],
        ),
    ]
